#include <iostream>


using namespace std;


class Node {
public:
    Node* next;
    int value;

    Node(int value = 0) {
        this->value = value;
        next = nullptr;
    }
};

class LinkedList {
private:
    Node* head;
    Node* tail;
    int length;

public:
    LinkedList(int value = 0) {
        if (value == 0) {
            head = nullptr;
            tail = nullptr;
            length = 0;
        } else {
            Node* newNode = new Node(value);
            head = newNode;
            tail = newNode;
            length = 1;
        }
    }

    ~LinkedList() {
        Node* tmp = head;

        while (head) {
            head = head->next;
            delete tmp;
            tmp = head;
        }

        head = nullptr;
        tail = nullptr;
    }

    int getLength() {
        return length;
    }

    bool isEmpty() {
        if (length == 0) return true;
        return false;
    }

    void printList() {
        if (length == 0) {
            cout << "List is empty!" << endl;
        }

        Node* tmp = head;

        for (int i = 0; i < length; i++) {
            cout << tmp->value << " -> ";
            tmp = tmp->next;
        }
        cout << endl;
    }

    // craetes a node and inserts it at a given index
    void insert(int value, int index) {
        if (index < 0 || index >= length) {
            cout << "Index out of bounds!" << endl;
            return;
        }

        Node* node = new Node(value);

        if (lenght == 0) {
            head = node;
            tail = node;
        } else {
            Node *tmp = head;

            for (int i = 0; i < index - 1; i++) {
                tmp = tmp->next;
            }

        }
    }




};


int main() {
    LinkedList* ll = new LinkedList();

}
